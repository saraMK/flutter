import 'package:bloc/bloc.dart';import 'package:flutter_app2/models/categories_model/Category.dart'; import 'package:flutter_app2/module/categories/cubit/states.dart';import 'package:flutter_app2/network/cach_helper/cacheHelper.dart';import 'package:flutter_app2/network/dio_helper/dioHelper.dart';import 'package:flutter_app2/utiles/endpoints.dart';import 'package:flutter_bloc/flutter_bloc.dart';class CategoryCubit extends Cubit<CategoryStates> {  static CategoryCubit get(context) => BlocProvider.of(context);  List<CategoryModel> catgoryList = [];  List<CategoryModel> copycatgoryList = [] ;   int index=-1;  CategoryCubit() : super(IntialState());  void getCatgoris() {    CacheHelper.saveDataString(key: "nvnnvnvnnvnv", value: "123456");     getCategoriesFromApi();   print( CacheHelper.getDataString(key: "nvnnvnvnnvnv"));  }  void getCategoriesFromApi() {    emit(CategoriesLoading());    DioHelper.getData(EndPoints.categoriesAPI)        .then((value) {          setList(List.from(value.data).map((item)=> CategoryModel.fromJson(item)).toList());    }).catchError((onError) {      emit(OnError(onError.toString()));    });  }  void search(String txt) {    catgoryList.clear();    if (txt.isEmpty) {      catgoryList.addAll(copycatgoryList);    }  else{      for(CategoryModel category in copycatgoryList){        print(category.name.toLowerCase().trim().contains(txt.toLowerCase().trim()));        if (category.name.toLowerCase().trim().contains(txt.toLowerCase().trim())) {          catgoryList.add(category);        }      }    }    emit(CategoriesListState());  }  setList(List<CategoryModel> list) {    catgoryList= list;    copycatgoryList.addAll(catgoryList);    emit(CategoriesListState());  }}