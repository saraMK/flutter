import 'package:conditional_builder/conditional_builder.dart';import 'package:flutter/material.dart';import 'package:flutter_app2/layout/products/product_item_light.dart';import 'package:flutter_app2/models/products/products_model.dart';import 'package:flutter_app2/module/product_details/product_details_screen.dart';import 'package:flutter_app2/module/products/cubit/products_cubit.dart';import 'package:flutter_bloc/flutter_bloc.dart';import 'cubit/products_states.dart';class ProductsScreen extends StatelessWidget {  List<ProductModel> list = [];  @override  Widget build(BuildContext context) {    String id = "";    id = ModalRoute.of(context).settings.arguments as String;    return Scaffold(        appBar: AppBar(),        body: BlocProvider<ProductsCubit>(            create: (context) => ProductsCubit()..getProducts(id),            child: BlocConsumer<ProductsCubit, ProductsStates>(                listener: (context, state) {},                builder: (context, state) {                  ProductsCubit bloc = BlocProvider.of(context);                  list = bloc.productsList;                  return ConditionalBuilder(                    condition: state is! LoadingState,                    builder: (context) => Container(                      color: Colors.white,                      child: GridView.builder(                        gridDelegate: SliverGridDelegateWithFixedCrossAxisCount(                          crossAxisCount: 2,                          childAspectRatio: 1 / 1.2, // control height o grid                        ),                        shrinkWrap: true,                        itemBuilder: (context, index) => GestureDetector(                          child: ProductItemLight(true, false, list[index]),                          onTap: () {                            Navigator.push(                              context,                              MaterialPageRoute(                                builder: (context) => ProductDetailsScreen(),                                settings: RouteSettings(                                  arguments: list[index].productId,                                ),                              ),                            );                          },                        ),                        itemCount: list.length,                        scrollDirection: Axis.vertical,                      ),                    ),                    fallback: (context) => Center(                        child: CircularProgressIndicator(                      backgroundColor: Colors.red,                    )),                  );                })));  }}